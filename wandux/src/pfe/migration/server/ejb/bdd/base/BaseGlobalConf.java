package pfe.migration.server.ejb.bdd.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the global_conf table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="global_conf"
 */
public abstract class BaseGlobalConf  implements Serializable {

	public static String PROP_KEY = "Key";
	public static String PROP_HOSTNAME = "Hostname";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.String _key;

	// fields
	private java.lang.String _hostname;


	// constructors
	public BaseGlobalConf () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseGlobalConf (java.lang.String _key) {
		this.setKey(_key);
		initialize();
	}

	/**
	 * Constructor for required fields
	 */
	public BaseGlobalConf (
		java.lang.String _key,
		java.lang.String _hostname) {

		this.setKey(_key);
		this.setHostname(_hostname);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="vm"
     *  column="key"
     */
	public java.lang.String getKey () {
		return _key;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _key the new ID
	 */
	public void setKey (java.lang.String _key) {
		this._key = _key;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: hostname
	 */
	public java.lang.String getHostname () {
		return _hostname;
	}

	/**
	 * Set the value related to the column: hostname
	 * @param _hostname the hostname value
	 */
	public void setHostname (java.lang.String _hostname) {
		this._hostname = _hostname;
	}


	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof pfe.migration.server.ejb.bdd.base.BaseGlobalConf)) return false;
		else {
			pfe.migration.server.ejb.bdd.base.BaseGlobalConf mObj = (pfe.migration.server.ejb.bdd.base.BaseGlobalConf) obj;
			if (null == this.getKey() || null == mObj.getKey()) return false;
			else return (this.getKey().equals(mObj.getKey()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getKey()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getKey().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}