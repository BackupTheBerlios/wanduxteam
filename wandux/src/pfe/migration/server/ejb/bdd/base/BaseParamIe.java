package pfe.migration.server.ejb.bdd.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the PARAM_IE table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="PARAM_IE"
 */
public abstract class BaseParamIe  implements Serializable {

	public static String PROP_PROXY_SAVE_DIRECTORY = "ProxySaveDirectory";
	public static String PROP_PROXY_SERVER = "ProxyServer";
	public static String PROP_PROXY_USER_ID = "ProxyUserId";
	public static String PROP_PROXY_AUTOCONFIG_URL = "ProxyAutoconfigUrl";
	public static String PROP_ID = "Id";
	public static String PROP_PROXY_OVERRIDE = "ProxyOverride";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.Integer _id;

	// fields
	private java.lang.Integer _proxyUserId;
	private java.lang.String _proxyOverride;
	private java.lang.String _proxyAutoconfigUrl;
	private java.lang.String _proxyServer;
	private java.lang.String _proxySaveDirectory;


	// constructors
	public BaseParamIe () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseParamIe (java.lang.Integer _id) {
		this.setId(_id);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="vm"
     *  column="PROXY_ID"
     */
	public java.lang.Integer getId () {
		return _id;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _id the new ID
	 */
	public void setId (java.lang.Integer _id) {
		this._id = _id;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: PROXY_USER_ID
	 */
	public java.lang.Integer getProxyUserId () {
		return _proxyUserId;
	}

	/**
	 * Set the value related to the column: PROXY_USER_ID
	 * @param _proxyUserId the PROXY_USER_ID value
	 */
	public void setProxyUserId (java.lang.Integer _proxyUserId) {
		this._proxyUserId = _proxyUserId;
	}


	/**
	 * Return the value associated with the column: PROXY_OVERRIDE
	 */
	public java.lang.String getProxyOverride () {
		return _proxyOverride;
	}

	/**
	 * Set the value related to the column: PROXY_OVERRIDE
	 * @param _proxyOverride the PROXY_OVERRIDE value
	 */
	public void setProxyOverride (java.lang.String _proxyOverride) {
		this._proxyOverride = _proxyOverride;
	}


	/**
	 * Return the value associated with the column: PROXY_AUTOCONFIG_URL
	 */
	public java.lang.String getProxyAutoconfigUrl () {
		return _proxyAutoconfigUrl;
	}

	/**
	 * Set the value related to the column: PROXY_AUTOCONFIG_URL
	 * @param _proxyAutoconfigUrl the PROXY_AUTOCONFIG_URL value
	 */
	public void setProxyAutoconfigUrl (java.lang.String _proxyAutoconfigUrl) {
		this._proxyAutoconfigUrl = _proxyAutoconfigUrl;
	}


	/**
	 * Return the value associated with the column: PROXY_SERVER
	 */
	public java.lang.String getProxyServer () {
		return _proxyServer;
	}

	/**
	 * Set the value related to the column: PROXY_SERVER
	 * @param _proxyServer the PROXY_SERVER value
	 */
	public void setProxyServer (java.lang.String _proxyServer) {
		this._proxyServer = _proxyServer;
	}


	/**
	 * Return the value associated with the column: PROXY_SAVE_DIRECTORY
	 */
	public java.lang.String getProxySaveDirectory () {
		return _proxySaveDirectory;
	}

	/**
	 * Set the value related to the column: PROXY_SAVE_DIRECTORY
	 * @param _proxySaveDirectory the PROXY_SAVE_DIRECTORY value
	 */
	public void setProxySaveDirectory (java.lang.String _proxySaveDirectory) {
		this._proxySaveDirectory = _proxySaveDirectory;
	}


	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof pfe.migration.server.ejb.bdd.base.BaseParamIe)) return false;
		else {
			pfe.migration.server.ejb.bdd.base.BaseParamIe mObj = (pfe.migration.server.ejb.bdd.base.BaseParamIe) obj;
			if (null == this.getId() || null == mObj.getId()) return false;
			else return (this.getId().equals(mObj.getId()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getId()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getId().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}