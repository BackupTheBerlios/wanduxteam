package pfe.migration.server.ejb.bdd.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the PARAM_IE table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="PARAM_IE"
 */
public abstract class BaseParamIe  implements Serializable {

	public static String PROP_IE_PROXY_AUTO_CONFIG_URL = "IeProxyAutoConfigUrl";
	public static String PROP_IE_PROXY_OVERRIDE = "IeProxyOverride";
	public static String PROP_IE_PROXY_SERVER = "IeProxyServer";
	public static String PROP_IE_PROXY_SAVE_DIRECTORY = "IeProxySaveDirectory";
	public static String PROP_IE_PROXY_USER_ID = "IeProxyUserId";
	public static String PROP_ID = "Id";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.Integer _id;

	// fields
	private java.lang.String _ieProxySaveDirectory;
	private java.lang.Integer _ieProxyUserId;
	private java.lang.String _ieProxyServer;
	private java.lang.String _ieProxyAutoConfigUrl;
	private java.lang.String _ieProxyOverride;


	// constructors
	public BaseParamIe () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseParamIe (java.lang.Integer _id) {
		this.setId(_id);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="vm"
     *  column="IE_PROXY_ID"
     */
	public java.lang.Integer getId () {
		return _id;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _id the new ID
	 */
	public void setId (java.lang.Integer _id) {
		this._id = _id;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: IE_PROXY_SAVE_DIRECTORY
	 */
	public java.lang.String getIeProxySaveDirectory () {
		return _ieProxySaveDirectory;
	}

	/**
	 * Set the value related to the column: IE_PROXY_SAVE_DIRECTORY
	 * @param _ieProxySaveDirectory the IE_PROXY_SAVE_DIRECTORY value
	 */
	public void setIeProxySaveDirectory (java.lang.String _ieProxySaveDirectory) {
		this._ieProxySaveDirectory = _ieProxySaveDirectory;
	}


	/**
	 * Return the value associated with the column: IE_PROXY_USER_ID
	 */
	public java.lang.Integer getIeProxyUserId () {
		return _ieProxyUserId;
	}

	/**
	 * Set the value related to the column: IE_PROXY_USER_ID
	 * @param _ieProxyUserId the IE_PROXY_USER_ID value
	 */
	public void setIeProxyUserId (java.lang.Integer _ieProxyUserId) {
		this._ieProxyUserId = _ieProxyUserId;
	}


	/**
	 * Return the value associated with the column: IE_PROXY_SERVER
	 */
	public java.lang.String getIeProxyServer () {
		return _ieProxyServer;
	}

	/**
	 * Set the value related to the column: IE_PROXY_SERVER
	 * @param _ieProxyServer the IE_PROXY_SERVER value
	 */
	public void setIeProxyServer (java.lang.String _ieProxyServer) {
		this._ieProxyServer = _ieProxyServer;
	}


	/**
	 * Return the value associated with the column: IE_PROXY_AUTO_CONFIG_URL
	 */
	public java.lang.String getIeProxyAutoConfigUrl () {
		return _ieProxyAutoConfigUrl;
	}

	/**
	 * Set the value related to the column: IE_PROXY_AUTO_CONFIG_URL
	 * @param _ieProxyAutoConfigUrl the IE_PROXY_AUTO_CONFIG_URL value
	 */
	public void setIeProxyAutoConfigUrl (java.lang.String _ieProxyAutoConfigUrl) {
		this._ieProxyAutoConfigUrl = _ieProxyAutoConfigUrl;
	}


	/**
	 * Return the value associated with the column: IE_PROXY_OVERRIDE
	 */
	public java.lang.String getIeProxyOverride () {
		return _ieProxyOverride;
	}

	/**
	 * Set the value related to the column: IE_PROXY_OVERRIDE
	 * @param _ieProxyOverride the IE_PROXY_OVERRIDE value
	 */
	public void setIeProxyOverride (java.lang.String _ieProxyOverride) {
		this._ieProxyOverride = _ieProxyOverride;
	}


	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof pfe.migration.server.ejb.bdd.base.BaseParamIe)) return false;
		else {
			pfe.migration.server.ejb.bdd.base.BaseParamIe mObj = (pfe.migration.server.ejb.bdd.base.BaseParamIe) obj;
			if (null == this.getId() || null == mObj.getId()) return false;
			else return (this.getId().equals(mObj.getId()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getId()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getId().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}