package pfe.migration.server.ejb.bdd.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the network_dhcp_config table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="network_dhcp_config"
 */
public abstract class BaseNetworkDhcpConfig  implements Serializable {

	public static String PROP_KEY = "Key";
	public static String PROP_DHCP_DEF_GATEWAY = "DhcpDefGateway";
	public static String PROP_DHCP_ADRESS = "DhcpAdress";
	public static String PROP_DHCP_SUBNETMASK = "DhcpSubnetmask";
	public static String PROP_DHCP_SEC_DNS = "DhcpSecDns";
	public static String PROP_DHCP_SERVER = "DhcpServer";
	public static String PROP_DHCP_DOMAIN = "DhcpDomain";
	public static String PROP_DHCP_PRI_DNS = "DhcpPriDns";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.String _key;

	// fields
	private java.lang.String _dhcpDomain;
	private java.lang.String _dhcpDefGateway;
	private java.lang.String _dhcpServer;
	private java.lang.String _dhcpSubnetmask;
	private java.lang.String _dhcpPriDns;
	private java.lang.String _dhcpAdress;
	private java.lang.String _dhcpSecDns;


	// constructors
	public BaseNetworkDhcpConfig () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseNetworkDhcpConfig (java.lang.String _key) {
		this.setKey(_key);
		initialize();
	}

	/**
	 * Constructor for required fields
	 */
	public BaseNetworkDhcpConfig (
		java.lang.String _key,
		java.lang.String _dhcpDomain,
		java.lang.String _dhcpDefGateway,
		java.lang.String _dhcpServer,
		java.lang.String _dhcpSubnetmask,
		java.lang.String _dhcpPriDns,
		java.lang.String _dhcpAdress,
		java.lang.String _dhcpSecDns) {

		this.setKey(_key);
		this.setDhcpDomain(_dhcpDomain);
		this.setDhcpDefGateway(_dhcpDefGateway);
		this.setDhcpServer(_dhcpServer);
		this.setDhcpSubnetmask(_dhcpSubnetmask);
		this.setDhcpPriDns(_dhcpPriDns);
		this.setDhcpAdress(_dhcpAdress);
		this.setDhcpSecDns(_dhcpSecDns);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="vm"
     *  column="key"
     */
	public java.lang.String getKey () {
		return _key;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _key the new ID
	 */
	public void setKey (java.lang.String _key) {
		this._key = _key;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: dhcp_domain
	 */
	public java.lang.String getDhcpDomain () {
		return _dhcpDomain;
	}

	/**
	 * Set the value related to the column: dhcp_domain
	 * @param _dhcpDomain the dhcp_domain value
	 */
	public void setDhcpDomain (java.lang.String _dhcpDomain) {
		this._dhcpDomain = _dhcpDomain;
	}


	/**
	 * Return the value associated with the column: dhcp_def_gateway
	 */
	public java.lang.String getDhcpDefGateway () {
		return _dhcpDefGateway;
	}

	/**
	 * Set the value related to the column: dhcp_def_gateway
	 * @param _dhcpDefGateway the dhcp_def_gateway value
	 */
	public void setDhcpDefGateway (java.lang.String _dhcpDefGateway) {
		this._dhcpDefGateway = _dhcpDefGateway;
	}


	/**
	 * Return the value associated with the column: dhcp_server
	 */
	public java.lang.String getDhcpServer () {
		return _dhcpServer;
	}

	/**
	 * Set the value related to the column: dhcp_server
	 * @param _dhcpServer the dhcp_server value
	 */
	public void setDhcpServer (java.lang.String _dhcpServer) {
		this._dhcpServer = _dhcpServer;
	}


	/**
	 * Return the value associated with the column: dhcp_subnetmask
	 */
	public java.lang.String getDhcpSubnetmask () {
		return _dhcpSubnetmask;
	}

	/**
	 * Set the value related to the column: dhcp_subnetmask
	 * @param _dhcpSubnetmask the dhcp_subnetmask value
	 */
	public void setDhcpSubnetmask (java.lang.String _dhcpSubnetmask) {
		this._dhcpSubnetmask = _dhcpSubnetmask;
	}


	/**
	 * Return the value associated with the column: dhcp_pri_dns
	 */
	public java.lang.String getDhcpPriDns () {
		return _dhcpPriDns;
	}

	/**
	 * Set the value related to the column: dhcp_pri_dns
	 * @param _dhcpPriDns the dhcp_pri_dns value
	 */
	public void setDhcpPriDns (java.lang.String _dhcpPriDns) {
		this._dhcpPriDns = _dhcpPriDns;
	}


	/**
	 * Return the value associated with the column: dhcp_adress
	 */
	public java.lang.String getDhcpAdress () {
		return _dhcpAdress;
	}

	/**
	 * Set the value related to the column: dhcp_adress
	 * @param _dhcpAdress the dhcp_adress value
	 */
	public void setDhcpAdress (java.lang.String _dhcpAdress) {
		this._dhcpAdress = _dhcpAdress;
	}


	/**
	 * Return the value associated with the column: dhcp_sec_dns
	 */
	public java.lang.String getDhcpSecDns () {
		return _dhcpSecDns;
	}

	/**
	 * Set the value related to the column: dhcp_sec_dns
	 * @param _dhcpSecDns the dhcp_sec_dns value
	 */
	public void setDhcpSecDns (java.lang.String _dhcpSecDns) {
		this._dhcpSecDns = _dhcpSecDns;
	}


	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof pfe.migration.server.ejb.bdd.base.BaseNetworkDhcpConfig)) return false;
		else {
			pfe.migration.server.ejb.bdd.base.BaseNetworkDhcpConfig mObj = (pfe.migration.server.ejb.bdd.base.BaseNetworkDhcpConfig) obj;
			if (null == this.getKey() || null == mObj.getKey()) return false;
			else return (this.getKey().equals(mObj.getKey()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getKey()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getKey().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}