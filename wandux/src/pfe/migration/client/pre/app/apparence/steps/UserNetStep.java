///*
// * CREATED ON 23 JUIN 2005
// *
// * TODO TO CHANGE THE TEMPLATE FOR THIS GENERATED FILE GO TO
// * WINDOW - PREFERENCES - JAVA - CODE STYLE - CODE TEMPLATES
// */
//PACKAGE PFE.MIGRATION.CLIENT.PRE.APP.APPARENCE.STEPS;
//
//IMPORT JAVA.IO.BUFFEREDREADER;
//IMPORT JAVA.IO.INPUTSTREAMREADER;
////IMPORT JAVA.RMI.REMOTEEXCEPTION;
//IMPORT JAVA.UTIL.ARRAYLIST;
//IMPORT JAVA.UTIL.HASHTABLE;
//IMPORT JAVA.UTIL.LIST;
//IMPORT JAVA.UTIL.STRINGTOKENIZER;
//IMPORT JAVA.UTIL.VECTOR;
//
//IMPORT JAVAX.SWING.JLIST;
//IMPORT JAVAX.SWING.JPANEL;
//
////IMPORT NET.SF.HIBERNATE.HIBERNATEEXCEPTION;
//
//IMPORT PFE.MIGRATION.CLIENT.NETWORK.CLIENTEJB;
//IMPORT PFE.MIGRATION.CLIENT.NETWORK.COMPUTERINFORMATION;
//IMPORT PFE.MIGRATION.CLIENT.PRE.APP.LANGUAGESETTINGS;
//IMPORT PFE.MIGRATION.CLIENT.PRE.APP.NETSETTINGS;
//IMPORT PFE.MIGRATION.CLIENT.PRE.APP.USERCONFIG;
//IMPORT PFE.MIGRATION.CLIENT.PRE.SYSTEM.IEPARAM;
//IMPORT PFE.MIGRATION.CLIENT.PRE.SYSTEM.KEYVAL;
//IMPORT PFE.MIGRATION.SERVER.EJB.BDD.GLOBALCONF;
//IMPORT PFE.MIGRATION.SERVER.EJB.BDD.NETWORKCONFIG;
//IMPORT PFE.MIGRATION.SERVER.EJB.BDD.PARAMIE;
//IMPORT PFE.MIGRATION.SERVER.EJB.BDD.USERSDATA;
//
///**
// * @AUTHOR DUPADMIN
// *
// * TODO TO CHANGE THE TEMPLATE FOR THIS GENERATED TYPE COMMENT GO TO
// * WINDOW - PREFERENCES - JAVA - CODE STYLE - CODE TEMPLATES
// */
//PUBLIC CLASS USERNETSTEP EXTENDS JPANEL
//{
//	/**
//	 * COMMENT FOR <CODE>SERIALVERSIONUID</CODE>
//	 */
//	PRIVATE STATIC FINAL LONG SERIALVERSIONUID = 1L;
//	PRIVATE COMPUTERINFORMATION CI = NULL;
//	
//	PUBLIC USERNETSTEP(CLIENTEJB CE)
//	{
////		JSCROLLPANE SCROLLPANE= NEW JSCROLLPANE();
////		SCROLLPANE.SETPREFERREDSIZE(NEW DIMENSION(400,400));
////		SCROLLPANE.SETVIEWPORTVIEW(PRINTSYSTEMINFOS(SYSTEMINFORMATION(CE)));
////		THIS.ADD(SCROLLPANE);
//		
//		SYSTEMINFORMATION(CE);
//		THIS.ADD(PRINTSYSTEMINFOS());
//	}
//
//	PUBLIC VOID SYSTEMINFORMATION(CLIENTEJB CE)
//	{
//		KEYVAL KVUSERS = NEW KEYVAL();
//		THIS.CI = NEW COMPUTERINFORMATION();
//		STRING MACADDR = NETSETTINGS.FINDMACADDR();
//		THIS.CI.GCONF = NEW GLOBALCONF();
//		THIS.CI.GCONF.SETGLOBALKEY(NEW INTEGER(MACADDR.HASHCODE()));
//		THIS.CI.NETCONF = NEW NETWORKCONFIG();
//		THIS.CI.NETCONF.SETNETWORKKEY(THIS.CI.GCONF.GETGLOBALKEY());
//		THIS.CI.UDATA = NEW USERSDATA();
//		THIS.CI.UDATA.SETUSERKEY(THIS.CI.GCONF.GETGLOBALKEY());
//		THIS.CI.IECONF = NEW PARAMIE(NEW INTEGER("METTRE LE LOGIN ICI".HASHCODE()));
//		
//		//HOSTNAME
//		THIS.CI.GCONF.SETGLOBALHOSTNAME(KVUSERS.GETKEYVALLOCALMACHINE(
//							"SYSTEM\\CURRENTCONTROLSET\\SERVICES\\TCPIP\\PARAMETERS", "HOSTNAME"));
//
//		//DHCP ENABLED
//		STRING CURINTERFACE = KVUSERS
//		.FINDCURRENTINTERFACE("SYSTEM\\CURRENTCONTROLSET\\SERVICES\\TCPIP\\PARAMETERS\\INTERFACES");
//
//		KEYVAL.FINDLINKAGE();
//		
//		// PROXY
//		IEPARAM IEPARAM = NEW IEPARAM();
//		THIS.CI.IECONF.SETIEPROXYSERVER(IEPARAM.GETPROXYSERVER());
//		THIS.CI.IECONF.SETIEPROXYOVERRIDE(IEPARAM.GETPROXYOVERRIDE());
//		//THIS.CI.IECONF.SETIEPROXYAUTOCONFIGURL(IEPARAM.GETAUTOCONFIGURL());
//		
//		IF (!CURINTERFACE.EQUALS("DHCPDISABLED"))
//		{
//			THIS.CI.NETCONF.SETNETWORKDHCPENABLED(NEW BYTE("1"));
//			//DHCPSERVER
//			SYSTEM.OUT.PRINTLN("DHCP ENABLED");
//			STRING ENABLEDHCP = NEW STRING(KVUSERS.GETKEYVALLOCALMACHINE(
//					"SYSTEM\\CURRENTCONTROLSET\\SERVICES\\TCPIP\\PARAMETERS\\INTERFACES\\"
//							+ CURINTERFACE, "ENABLEDHCP"));
//			
//			//DEPRECATED
////			CI.NETCONF.SETDHCPSERVER(KVUSERS.GETKEYVALLOCALMACHINE(
////								"SYSTEM\\CURRENTCONTROLSET\\SERVICES\\TCPIP\\PARAMETERS\\INTERFACES\\"
////								+ CURINTERFACE, "DHCPSERVER"));
//			
////			DEPRECATED
//			//DHCP IP ADRESS
//			THIS.CI.NETCONF.SETNETWORKIPADDRESS(KVUSERS.GETKEYVALLOCALMACHINE(
//								"SYSTEM\\CURRENTCONTROLSET\\SERVICES\\TCPIP\\PARAMETERS\\INTERFACES\\"
//								+ CURINTERFACE, "DHCPIPADDRESS"));
//			
////			DEPRECATED
//			//DHCPSUBNETMASK
////			CI.NETCONF.SETDHCPSUBNETMASK(KVUSERS.GETKEYVALLOCALMACHINE(
////								"SYSTEM\\CURRENTCONTROLSET\\SERVICES\\TCPIP\\PARAMETERS\\INTERFACES\\"
////								+ CURINTERFACE, "DHCPSUBNETMASK"));
//		}
//		ELSE
//		{
//			THIS.CI.NETCONF.SETNETWORKDHCPENABLED(NEW BYTE("0"));
//			SYSTEM.OUT.PRINTLN("DHCP DISABLED");
//			CURINTERFACE = KEYVAL.FINDLINKAGE();
//
//			SYSTEM.OUT.PRINTLN(KVUSERS.GETKEYVALLOCALMACHINE(
//								"SYSTEM\\CURRENTCONTROLSET\\SERVICES\\TCPIP\\PARAMETERS\\INTERFACES\\"
//								+ CURINTERFACE, "DEFAULTGATEWAY"));
//			SYSTEM.OUT.PRINTLN(KVUSERS.GETKEYVALLOCALMACHINE(
//					"SYSTEM\\CURRENTCONTROLSET\\SERVICES\\TCPIP\\PARAMETERS\\INTERFACES\\"
//					+ CURINTERFACE, "IPADDRESS"));
//			SYSTEM.OUT.PRINTLN(KVUSERS.GETKEYVALLOCALMACHINE(
//					"SYSTEM\\CURRENTCONTROLSET\\SERVICES\\TCPIP\\PARAMETERS\\INTERFACES\\"
//					+ CURINTERFACE, "SUBNETMASK"));
//			
////			SYSTEM.OUT.PRINTLN(KVUSERS.GETKEYVALLOCALMACHINE(
////					"SYSTEM\\CURRENTCONTROLSET\\SERVICES\\TCPIP\\PARAMETERS\\INTERFACES\\"
////					+ CURINTERFACE, "NAMESERVER"));
//			STRING NSREG = KVUSERS.GETKEYVALLOCALMACHINE(
//					"SYSTEM\\CURRENTCONTROLSET\\SERVICES\\TCPIP\\PARAMETERS\\INTERFACES\\"
//					+ CURINTERFACE, "NAMESERVER");
//
//			HASHTABLE HT = NEW HASHTABLE();
//			STRINGTOKENIZER ST = NEW STRINGTOKENIZER(NSREG, ",");
//			VECTOR NSTABLE = NEW VECTOR();
//			STRING NS = NULL;
//			INT I;
//
//			FOR (I = 0; I <= ST.COUNTTOKENS(); I++)
//			{
//				NSTABLE.ADD(ST.NEXTTOKEN());
//			}
//
//			FOR (INT J = 0; J < I; J++)
//			{
//				NS = (STRING)NSTABLE.ELEMENTAT(J);
//				SYSTEM.OUT.PRINTLN(NS);
//			}
//		}
//		THIS.CI.UDATA.SETUSERKBLAYOUT(LANGUAGESETTINGS.GETDEFAULTKBLAYOUT(CE));
//		LANGUAGESETTINGS LNS = NEW LANGUAGESETTINGS();
////		PROGRAMSLISTER PROGLIST = NEW PROGRAMSLISTER();
////		PROGRAMSLISTER.PARSEEXTENSIONS();
//
//		//GROS ABUS : LOGIN PAS ENCORE RECUPERE
//		THIS.CI.UDATA.SETUSERLOGIN(SYSTEM.GETPROPERTY("USER.NAME"));
//		
//		THIS.CI.UDATA.SETUSERHOME(SYSTEM.GETPROPERTY("USER.HOME"));
//		THIS.CI.UDATA.SETUSERTIMEZONE(SYSTEM.GETPROPERTY("USER.TIMEZONE"));
//		USERCONFIG UC = NEW USERCONFIG();
//		THIS.CI.UDATA.SETUSERPROXYSERV(USERCONFIG.PROXYSERVER());
//		THIS.CI.UDATA.SETUSERPROXYOVERRIDE(USERCONFIG.PROXYOVERRIDE());
//		
//		
//		STRING S = NULL;
//		TRY {
//			PROCESS P = RUNTIME.GETRUNTIME().EXEC(
//					"CMD /C \"ECHO %SYSTEMROOT%\"");
//			BUFFEREDREADER STDINPUT = NEW BUFFEREDREADER(NEW INPUTSTREAMREADER(
//					P.GETINPUTSTREAM()));
//			S = STDINPUT.READLINE();
////			IF ((S = STDINPUT.READLINE()) != NULL) {
////				SYSTEM.OUT.PRINTLN(S);
////			}
//		} CATCH (EXCEPTION E) {
//			SYSTEM.OUT.PRINTLN(E);
//		}
//		
//		
//		THIS.CI.UDATA.SETUSERBGIMG(USERCONFIG.BGIMAGE());
//		//LA MACADDR EST DESORMAIS GETTEE DANS LES PREMIERES LIGNES DE CETTE FONCTION
//		THIS.CI.NETCONF.SETNETWORKMACADRESS(MACADDR);
//		
////		EXEMPLE DE CODE POUR GETTER COMPUTERINFORMATION
////		(A SURROUNDER AVEC UN TRY/CATCH)
////		
////		COMPUTERINFORMATION TOTO =  CE.GETCOMPUTERINFORMATION(MACADDR);
////		TOTO.GCONF.GETGLOBALHOSTNAME();
////		TOTO.NETCONF.GETNETWORKIPADDRESS();
////		TOTO.UDATA.GETUSERLOGIN();
//	
//		CE.TRANSFERT(THIS.CI);
//	}
//	
//	PUBLIC STATIC STRING REPLACE(STRING ORIG, STRING FROM, STRING TO)
//	{
//		INT START = ORIG.INDEXOF(FROM);
//		IF (START == -1)
//			RETURN ORIG;
//		INT LF = FROM.LENGTH();
//		CHAR [] ORIGCHARS = ORIG.TOCHARARRAY();
//		STRINGBUFFER BUFFER = NEW STRINGBUFFER();
//		INT COPYFROM = 0;
//
//		WHILE (START != -1)
//		{
//			BUFFER.APPEND(ORIGCHARS, COPYFROM, START - COPYFROM);
//			BUFFER.APPEND(TO);
//			COPYFROM = START + LF;
//			START = ORIG.INDEXOF(FROM, COPYFROM);
//		}
//		BUFFER.APPEND(ORIGCHARS, COPYFROM, ORIGCHARS.LENGTH - COPYFROM);
//		RETURN BUFFER.TOSTRING();
//	}
//	
//	/**
//	 * GRAPHICAL COMPONENT : SYSTEM INFORMATIONS
//	 */
//	PUBLIC JLIST PRINTSYSTEMINFOS()
//	{
//		LIST COMPONENTS  = NEW ARRAYLIST();
//		
//		COMPONENTS.ADD("----------   GLOBAL CONFIGURATION   -------------");
//		COMPONENTS.ADD("");
//		COMPONENTS.ADD("HOSTNAME: " + THIS.CI.GCONF.GETGLOBALHOSTNAME());
//		COMPONENTS.ADD("");
//		COMPONENTS.ADD("----------   NETWORK CONFIGURATION   ------------");
//		COMPONENTS.ADD("");
//		IF (THIS.CI.NETCONF.GETNETWORKDHCPENABLED().BYTEVALUE() == 1)
//			COMPONENTS.ADD("DHCPENABLED: YES");
//		ELSE
//			COMPONENTS.ADD("DHCPENABLED: NO");
//		COMPONENTS.ADD("");
////		COMPONENTS.ADD("DHCPSERVER: " + CI.NETCONF.GETDHCPSERVER());
////		COMPONENTS.ADD("DHCPIPADDRESS: " + CI.NETCONF.GETDHCPADRESS());
////		COMPONENTS.ADD("DHCPSUBNETMASK: " + CI.NETCONF.GETDHCPSUBNETMASK());
//		COMPONENTS.ADD("");
//		COMPONENTS.ADD("-----------   USERS CONFIGURATION   -------------");
//		COMPONENTS.ADD("");
//		RETURN NEW JLIST (COMPONENTS.TOARRAY());
//	}
//
//	PUBLIC COMPUTERINFORMATION GETCURRENTCOMPUTERINFORMATION()
//	{
//		RETURN THIS.CI;
//	}
//}
